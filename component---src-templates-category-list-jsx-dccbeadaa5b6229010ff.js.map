{"version":3,"file":"component---src-templates-category-list-jsx-dccbeadaa5b6229010ff.js","mappings":"gLAiFA,UA3EuB,SAAC,GAAwB,IAAD,EAArBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACxBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACX,uLAUJ,gBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACX,sBAAIK,MAAO,CAAEC,UAAU,SACpBL,EAAMM,KAAI,SAAAC,GACT,IAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACEE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,+BACA,+BACE,uBAAKF,UAAU,iBACb,uBAAKR,MAAO,CAAEW,aAAc,OAC1B,0BACE,gBAAC,EAAAC,KAAD,CACEC,GAAIV,EAAKE,OAAOC,KAChBQ,SAAS,MACTN,UAAU,mBAEV,wBAAMM,SAAS,YAAYnB,KAG/B,6BAAQQ,EAAKC,YAAYW,MACzB,qBACEP,UAAU,wBACVQ,wBAAyB,CACvBC,OAAQd,EAAKC,YAAYc,aAAef,EAAKgB,SAE/CL,SAAS,iBAGb,uBAAKN,UAAU,aACb,uBACER,MAAO,CAAEoB,MAAO,OAAQC,QAAS,gBACjCC,IAAKnB,EAAKC,YAAYmB,MACtBC,IAAKrB,EAAKC,YAAYT,WAM9B,gBAAC,EAAAiB,KAAD,CAAMJ,UAAU,iBAAiBK,GAAIV,EAAKE,OAAOC,MAC/C","sources":["webpack://gatsby-starter-blog/./src/templates/CategoryList.jsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst CategoriesList = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allMarkdownRemark.nodes\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={location} title={siteTitle}>\r\n        <Seo title=\"All posts\" />\r\n        <p>\r\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\r\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\r\n          gatsby-config.js).\r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo title=\"All posts\" />\r\n      <ol style={{ listStyle: `none` }}>\r\n        {posts.map(post => {\r\n          const title = post.frontmatter.title || post.fields.slug\r\n\r\n          return (\r\n            <li key={post.fields.slug}>\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemScope\r\n                itemType=\"http://schema.org/Article\"\r\n              >\r\n                <header></header>\r\n                <section>\r\n                  <div className=\"flex flex-row\">\r\n                    <div style={{ paddingRight: \"4%\" }}>\r\n                      <h2>\r\n                        <Link\r\n                          to={post.fields.slug}\r\n                          itemProp=\"url\"\r\n                          className=\"post-list-title\"\r\n                        >\r\n                          <span itemProp=\"headline\">{title}</span>\r\n                        </Link>\r\n                      </h2>\r\n                      <small>{post.frontmatter.date}</small>\r\n                      <p\r\n                        className=\"post-list-description\"\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: post.frontmatter.description || post.excerpt,\r\n                        }}\r\n                        itemProp=\"description\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"basis-2/5\">\r\n                      <img\r\n                        style={{ width: \"100%\", display: \"inline-block\" }}\r\n                        src={post.frontmatter.cover}\r\n                        alt={post.frontmatter.title}\r\n                      ></img>\r\n                    </div>\r\n                  </div>\r\n                </section>\r\n\r\n                <Link className=\"post-list-more\" to={post.fields.slug}>\r\n                  <span>read more</span>\r\n                </Link>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ol>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default CategoriesList\r\n\r\nexport const pageQuery = graphql`\r\n  query CategoryPageQuery($category: [String]){\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: 10\r\n      filter: { frontmatter: { categories: { in: $category } } }\r\n    ) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n          cover\r\n          categories\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","className","itemScope","itemType","paddingRight","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","width","display","src","cover","alt"],"sourceRoot":""}